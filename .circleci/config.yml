version: 2.1

#create Python env
orbs:
  python: circleci/python@2.1.1
  # codecov: codecov/codecov@1.0.2

jobs:
  #run unittests
  build-and-test:
    executor: python/default
    steps:
      - checkout
      - run:
          name: Run tests
          command: |
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            pip3 install biopython
            python -m unittest discover tests/
      - persist_to_workspace:
          root: ~/project
          paths:
            - .

  #linter and code coverage
  lint-and-coverage:
    executor: python/default
    description: |
      Running lint using flake8 and coverage report on package.
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip 
      - run:
          name: Linter
          command: |
            pip install flake8
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics > /tmp/flake8_output.txt || true
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics >> /tmp/flake8_output.txt || true
      - run:
          name: Coverage
          command: |
            pip install coverage
            pip install codecov
            pip install pytest
            pip install pytest-cov
      #store linter and coverage artifacts in tmp folder
      - store_artifacts:
          path: /tmp/coverage_report.txt
          destination: artifacts-file
      - store_artifacts:
          path: /tmp/flake8_output.txt
          destination: flake8-output.txt

  #package safety and bandit security check
  safety-and-bandit:
      executor: python/default
      description: |
        Running package safety and bandit security check on package.
      #install python dependancies and libraries, checkout repo
      steps:
        - checkout
        - python/install-packages:
            pkg-manager: pip 
        - run:
            name: Safety
            command: |
              pip install safety
              safety check > /tmp/package_safety_output.txt || true
        - run:
            name: Bandit
            command: |
              pip install bandit
              bandit -r . > /tmp/bandit_output.txt || true
        #store safety and bandit artifacts in tmp folder
        - store_artifacts:
            path: /tmp/package_safety_output.txt
            destination: safety-output.txt
        - store_artifacts:
            path: /tmp/bandit_output.txt
            destination: bandit-output.txt

  #verify installation of protpy
  protpy-pipeline:
      executor: python/default
      description: |
        Running protpy pipeline to check installation and version of package.
      #checkout repo
      steps:
        - checkout
        - python/install-packages:
            pkg-manager: pip 
        - run:
            name: protpy pipeline test
            command: |
              pip3 install protpy
              echo -e "import protpy as protpy\nprint(protpy.__version__)" | python3
#initialise all above jobs into a workflow
workflows:
  main:
    jobs:
      - build-and-test:
          filters:
            branches:
              only:
                - main
      - lint-and-coverage:
          filters:
            branches:
              only:
                - main
      - safety-and-bandit:
          filters:
            branches:
              only:
                - main
      - protpy-pipeline:
          requires:
            - build-and-test
          filters:
            branches:
              only:
                - main